---
  env:
    browser: true
    node: true

  extends: airbnb

  rules:
    # Can be automatically transformed everywhere with `eslint --fix`
    space-before-function-paren:
      - 2
      - "never"

    # in contrast to the old lint configuration, enforce the absence of dangling commas
    comma-dangle:
      - 2
      - "never"

    # allow unnamed anonymous functions
    func-names: 0

    # the airbnb toolchain presupposes concatenation and prepending 'use strict'
    strict: 0

    # deactivate enforced indentation, activate at own peril
    indent:
      - 0
      - 2
      - SwitchCase: 1

    # allows us to sort functions and classes in a logical order, rather than the inverse inclusion order
    no-use-before-define: 1

    # allows to assign to argument properties, but not to arguments
    no-param-reassign:
      - 2
      - props: false

    # allow function values, because some objects don't have methods, they are a collection of functions
    object-shorthand: 0

    # would require fat-arrow function definitions even if there is no result -> e.g. in tests `it`
    prefer-arrow-callback: 0

    # deactivate, because we want to allow for () => { return {}; } in favour of () => ({})
    arrow-body-style: 0

    # for a simple string + value, some of us prefer non-template strings. So enforce on a project-by-project basis
    prefer-template: 0

    # Go for a max-len, but set the default higher. Teams may switch the default at their own peril
    max-len:
      - 2
      - 107

# ##########################################

    arrow-parens:
      - 2
      - as-needed

    new-cap: 0
    no-underscore-dangle: 0

#     //
#     // eslint-plugin-react
#     //
#     // React specific linting rules for ESLint
#     //
#     "react/display-name": 0, // Prevent missing displayName in a React component definition
#     "react/jsx-quotes": [2, "double", "avoid-escape"], // Enforce quote style for JSX attributes
#     "react/jsx-no-undef": 2, // Disallow undeclared variables in JSX
#     "react/jsx-sort-props": 0, // Enforce props alphabetical sorting
#     "react/jsx-uses-react": 2, // Prevent React to be incorrectly marked as unused
#     "react/jsx-uses-vars": 2, // Prevent variables used in JSX to be incorrectly marked as unused
#     "react/no-did-mount-set-state": 2, // Prevent usage of setState in componentDidMount
#     "react/no-did-update-set-state": 2, // Prevent usage of setState in componentDidUpdate
#     "react/no-multi-comp": 0, // Prevent multiple component definition per file
#     "react/no-unknown-property": 2, // Prevent usage of unknown DOM property
#     "react/prop-types": 2, // Prevent missing props validation in a React component definition
#     "react/react-in-jsx-scope": 2, // Prevent missing React when using JSX
#     "react/self-closing-comp": 2, // Prevent extra closing tags for components without children
#     "react/wrap-multilines": 2, // Prevent missing parentheses around multilines JSX
